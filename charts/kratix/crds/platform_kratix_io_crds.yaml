apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: bucketstatestores.platform.kratix.io
spec:
  group: platform.kratix.io
  names:
    kind: BucketStateStore
    listKind: BucketStateStoreList
    plural: bucketstatestores
    singular: bucketstatestore
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: BucketStateStore is the Schema for the bucketstatestores API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BucketStateStoreSpec defines the desired state of BucketStateStore
              properties:
                bucketName:
                  type: string
                endpoint:
                  type: string
                insecure:
                  type: boolean
                path:
                  description: 'Path within the StateStore to write documents. This path should be allocated to Kratix as it will create, update, and delete files within this path. Path structure begins with provided path and ends with namespaced cluster name: <StateStore.Spec.Path>/<Cluster.Spec.Path>/<Cluster.Metadata.Namespace>/<Cluster.Metadata.Name>/'
                  type: string
                secretRef:
                  description: SecretRef specifies the Secret containing authentication credentials
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
              required:
                - bucketName
                - endpoint
              type: object
            status:
              description: BucketStateStoreStatus defines the observed state of BucketStateStore
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: clusters.platform.kratix.io
spec:
  group: platform.kratix.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Cluster is the Schema for the clusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterSpec defines the desired state of Cluster
              properties:
                path:
                  description: 'Path within the StateStore to write documents. This path should be allocated to Kratix as it will create, update, and delete files within this path. Path structure begins with provided path and ends with namespaced cluster name: <StateStore.Spec.Path>/<Cluster.Spec.Path>/<Cluster.Metadata.Namespace>/<Cluster.Metadata.Name>/'
                  type: string
                secretRef:
                  description: SecretRef specifies the Secret containing authentication credentials
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                stateStoreRef:
                  description: StateStoreReference is a reference to a StateStore
                  properties:
                    kind:
                      enum:
                        - BucketStateStore
                        - GitStateStore
                      type: string
                    name:
                      type: string
                  required:
                    - kind
                    - name
                  type: object
              type: object
            status:
              description: ClusterStatus defines the observed state of Cluster
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: gitstatestores.platform.kratix.io
spec:
  group: platform.kratix.io
  names:
    kind: GitStateStore
    listKind: GitStateStoreList
    plural: gitstatestores
    singular: gitstatestore
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: GitStateStore is the Schema for the gitstatestores API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: GitStateStoreSpec defines the desired state of GitStateStore
              properties:
                branch:
                  default: main
                  type: string
                path:
                  description: 'Path within the StateStore to write documents. This path should be allocated to Kratix as it will create, update, and delete files within this path. Path structure begins with provided path and ends with namespaced cluster name: <StateStore.Spec.Path>/<Cluster.Spec.Path>/<Cluster.Metadata.Namespace>/<Cluster.Metadata.Name>/'
                  type: string
                secretRef:
                  description: SecretRef specifies the Secret containing authentication credentials
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                url:
                  type: string
              type: object
            status:
              description: GitStateStoreStatus defines the observed state of GitStateStore
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: promises.platform.kratix.io
spec:
  group: platform.kratix.io
  names:
    kind: Promise
    listKind: PromiseList
    plural: promises
    singular: promise
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Promise is the Schema for the promises API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: PromiseSpec defines the desired state of Promise
              properties:
                clusterSelector:
                  additionalProperties:
                    type: string
                  type: object
                workerClusterResources:
                  items:
                    description: Resources represents the manifest workload to be deployed on worker cluster
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                xaasCrd:
                  description: X's CustomResourceDefinition to create the X-aaS offering
                  type: object
                  x-kubernetes-embedded-resource: true
                  x-kubernetes-preserve-unknown-fields: true
                xaasRequestPipeline:
                  description: Array of Image tags to transform from input request custom resource to output resource(s)
                  items:
                    type: string
                  type: array
              type: object
            status:
              description: PromiseStatus defines the observed state of Promise
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: workplacements.platform.kratix.io
spec:
  group: platform.kratix.io
  names:
    kind: WorkPlacement
    listKind: WorkPlacementList
    plural: workplacements
    singular: workplacement
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: WorkPlacement is the Schema for the workplacements API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: WorkPlacementSpec defines the desired state of WorkPlacement
              properties:
                targetClusterName:
                  type: string
                workName:
                  description: The unique identifier of the Work parent
                  type: string
              type: object
            status:
              description: WorkPlacementStatus defines the observed state of WorkPlacement
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: works.platform.kratix.io
spec:
  group: platform.kratix.io
  names:
    kind: Work
    listKind: WorkList
    plural: works
    singular: work
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Work is the Schema for the works API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: WorkSpec defines the desired state of Work
              properties:
                clusterSelector:
                  additionalProperties:
                    type: string
                  description: ClusterSelector is the selector to use for selecting the worker cluster
                  type: object
                replicas:
                  description: -1 denotes Cluster Worker Resources, 1 denotes Resource Request
                  type: integer
                workload:
                  description: Workload represents the manifest workload to be deployed on worker cluster
                  properties:
                    manifests:
                      description: Manifests represents a list of kuberenetes resources to be deployed on the worker cluster.
                      items:
                        description: Manifest represents a resource to be deployed on worker cluster
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      type: array
                  type: object
              type: object
            status:
              description: WorkStatus defines the observed state of Work
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
